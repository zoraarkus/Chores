specVersion: 0.0.2
schema:
  file: ./src/schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Chores 
    network: localhost
    source:
      address: '{{ChoresAddress}}'
      abi: Chores 
      startBlock: 1
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Chore
        - People 
      abis:
        - name: Chores 
          file: ./abis/Chores.json
      eventHandlers:
        - event: AuctionCreated(string,uint256,uint256,address)
          handler: handleNewAuction 
        - event: AuctionBid(uint256,uint256,address)
          handler: handleAuctionBid
        - event: ChoreCertified(uint256,uint256,address,address)
          handler: handleChoreCertified
        - event: AuctionSwept(uint256,uint256,address)
          handler: handleAuctionSweep 
        - event: AuctionSwept(uint256,uint256,address)
          handler: handleAuctionSweep
        - event: AddParent(address,address)
          handler: handleAddParent
        - event: RevokeParent(address,address)
          handler: handleRevokeParent
        - event: AuctionPaused(address,bool)
          handler: handleContractPaused 
        - event: RugPull(address)
          handler: handleRugPull
      file: ./src/mapping.ts
  - kind: ethereum/contract
    name: YourContract
    network: localhost
    source:
      address: '{{YourContractAddress}}'
      abi: YourContract
      startBlock: 1
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Purpose
        - Sender
      abis:
        - name: YourContract
          file: ./abis/YourContract.json
      eventHandlers:
        - event: SetPurpose(address,string)
          handler: handleSetPurpose
      file: ./src/mapping.ts
